import{_ as e,c as t,o as s,U as d}from"./chunks/framework.Ub3c7c8p.js";const a="/linux/assets/1.bHxbPqA0.png",i="/linux/assets/2.wI7pPEgZ.png",n="/linux/assets/3.qSBm3Icg.jpg",o="/linux/assets/4.xekZNQ8C.png",v=JSON.parse('{"title":"第一章：提问的艺术","description":"","frontmatter":{},"headers":[],"relativePath":"notes/01_linux_basic/03_xdx/index.md","filePath":"notes/01_linux_basic/03_xdx/index.md","lastUpdated":1705871740000}'),l={name:"notes/01_linux_basic/03_xdx/index.md"},c=d(`<h1 id="第一章-提问的艺术" tabindex="-1">第一章：提问的艺术 <a class="header-anchor" href="#第一章-提问的艺术" aria-label="Permalink to &quot;第一章：提问的艺术&quot;">​</a></h1><h2 id="_1-1-提问的艺术" tabindex="-1">1.1 提问的艺术 <a class="header-anchor" href="#_1-1-提问的艺术" aria-label="Permalink to &quot;1.1 提问的艺术&quot;">​</a></h2><ul><li><p>提问的艺术是指能够提出恰当的问题，以获得所需的信息、启发他人思考或促进对话。提问的艺术不仅在人际沟通中很重要，在学习、工作和研究等领域也发挥着重要作用。</p></li><li><p>以下是一些提问的艺术技巧：</p><ul><li><strong>明确你的目的。</strong> 在提问之前，先想清楚你想要获得什么信息或达到什么目的。这将帮助你提出更具体和有针对性的问题。</li><li><strong>使用开放式问题。</strong> 开放式问题以“什么”、“为什么”、“如何”等词语开头，可以鼓励对方提供更详细和深入的回答。</li><li><strong>避免使用封闭式问题。</strong> 封闭式问题以“是”或“否”回答，限制了对方的回答范围，也可能让对方感到被审问。</li><li><strong>关注细节。</strong> 提出具体和详细的问题，以获得更准确和有用的信息。</li><li><strong>使用积极的措辞。</strong> 避免使用负面或带有攻击性的措辞，以免引起对方的反感或抵触情绪。</li><li><strong>注意你的语气和态度。</strong> 提问时要保持礼貌和尊重，并注意你的语气和态度。</li><li><strong>学会倾听。</strong> 在对方回答问题时，要认真倾听并给予反馈。这将表明你在乎他们的回答，并鼓励他们继续分享信息。</li><li><strong>不要害怕提问。</strong> 提问是获取信息和学习新知识的重要方式。不要害怕提问，即使你认为你的问题很愚蠢或很基本。</li></ul></li><li><p>其实，总结起来就下面的 4 个步骤（⭐）：</p></li></ul><table><thead><tr><th>提问的艺术</th><th>备注</th></tr></thead><tbody><tr><td>① <code>简单客气下，同时直奔主题</code></td><td>直接描述自己遇到的问题是什么？</td></tr><tr><td>② <code>如果着急，可以多找几个人，或者多找几个交流群</code></td><td>广撒网捕鱼。</td></tr><tr><td>③ <code>如何让高手愿意帮助我们</code>？</td><td>每次在问题解决后，总结并发给对方，无论对方是否回应。</td></tr><tr><td>④ <code>如何总结和描述问题</code></td><td>使用 STAR 法则。</td></tr></tbody></table><h2 id="_1-2-star-法则" tabindex="-1">1.2 STAR 法则 <a class="header-anchor" href="#_1-2-star-法则" aria-label="Permalink to &quot;1.2 STAR 法则&quot;">​</a></h2><ul><li>STAR 法则是一种用于描述工作经历或技能的常用方法，它可以帮助我们清晰、简洁地向面试官或其他人展示我们的能力和成就。</li><li><code>换言之，STAR 法则可以增强我们表达问题的能力，以及描述问题的逻辑性</code>。</li><li>STAR 法则的四个字母分别代表：</li></ul><table><thead><tr><th>STAR 法则</th><th>备注</th></tr></thead><tbody><tr><td><strong>S</strong>ituation (情境)</td><td>描述我们所面临的情况或挑战。</td></tr><tr><td><strong>T</strong>ask (任务)</td><td>解释我们所需要完成的任务或目标。</td></tr><tr><td><strong>A</strong>ction (行动)</td><td>详细说明我们采取的具体行动或步骤来完成任务。</td></tr><tr><td><strong>R</strong>esult (结果)</td><td>描述我们所取得的成果或成就，以及我们从中学到的经验和教训。</td></tr></tbody></table><ul><li>示例：</li></ul><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>情境：我正在使用 xshell7 远程连接 VMware 中的 Linux 系统，但是遇到了连接不上的问题。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>任务：诊断并解决连接问题，以便能够成功远程连接到 Linux 系统。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>行动（步骤）：</span></span>
<span class="line"><span>	① 我首先检查了我的网络连接，确保我的电脑和 VMware 都连接到了同一个网络。</span></span>
<span class="line"><span>	② 然后，我检查了 xshell7 的配置，确保我输入了正确的连接信息，包括主机名或 IP 地址、端口号和用户名/密码。</span></span>
<span class="line"><span>	③ 我还检查了 VMware 的防火墙设置，确保它允许来自 xshell7 的连接。</span></span>
<span class="line"><span>	④ 此外，我尝试使用不同的连接协议，例如：SSH 和 Telnet，以排除连接协议的问题。</span></span>
<span class="line"><span>	⑤ 我还尝试使用不同的端口号，以排除端口号冲突的问题。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>结果：还是连接不上，问题到底在哪里？</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h1 id="第二章-linux-核心目录" tabindex="-1">第二章：Linux 核心目录 <a class="header-anchor" href="#第二章-linux-核心目录" aria-label="Permalink to &quot;第二章：Linux 核心目录&quot;">​</a></h1><h2 id="_2-1-扫清概念" tabindex="-1">2.1 扫清概念 <a class="header-anchor" href="#_2-1-扫清概念" aria-label="Permalink to &quot;2.1 扫清概念&quot;">​</a></h2><ul><li><code>文件夹</code>和<code>目录</code>本质上是<code>相同</code>的，它们都是用于组织和存储文件的<code>容器</code>。</li><li>通常而言，<code>/</code> 被称为<code>斜线</code>，而 <code>\\</code> 被称为<code>反斜线</code>。</li></ul><p><img src="`+a+'" alt="image-20240121185755549"></p><h2 id="_2-2-概述" tabindex="-1">2.2 概述 <a class="header-anchor" href="#_2-2-概述" aria-label="Permalink to &quot;2.2 概述&quot;">​</a></h2><ul><li>在 Linux 中的目录都是从根目录（<code>/</code>）开始的，Linux 的目录类似于一颗<code>倒挂</code>的树，如：</li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tree</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -L</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+i+'" alt="image-20240121185008826"></p><ul><li>其对应的<code>目录树状结构</code>，类似于：</li></ul><p><img src="'+n+'" alt="img"></p><blockquote><p>注意：</p><ul><li>① <code>/</code> 是根目录。</li><li>② <code>/etc/</code> 中的第一个 <code>/</code> 是根目录，<code>etc</code> 是目录名，第二个 <code>/</code> 表示是目录；并且，第二个 <code>/</code> 可以省略。</li><li>③ 在实际交流的时候，可能会模糊这些概念，直接会说 <code>/etc</code> 目录。</li></ul></blockquote><h2 id="_2-3-linux-的核心目录" tabindex="-1">2.3 Linux 的核心目录（⭐） <a class="header-anchor" href="#_2-3-linux-的核心目录" aria-label="Permalink to &quot;2.3 Linux 的核心目录（:star:）&quot;">​</a></h2><ul><li>Linux 的核心目录如下：</li></ul><table><thead><tr><th>核心目录</th><th>备注</th></tr></thead><tbody><tr><td><code>/etc/</code></td><td>系统服务<code>配置文件</code>的目录，存放系统、服务、命令的配置。</td></tr><tr><td><code>/home/</code></td><td>普通用户的家目录，如：<code>x</code> 用户的家目录就是 <code>/home/x/</code>。</td></tr><tr><td><code>/root/</code></td><td>root 用户的家目录，如：<code>root</code> 用户的家目录就是 <code>/root/</code>。</td></tr><tr><td><code>/dev/</code></td><td>dev 是 device 的缩写，是设备文件目录，如：硬盘等。</td></tr><tr><td><code>/tmp/</code></td><td>tmp 是 temp 的缩写，表示临时目录，用来存储程序运行中的临时文件等。</td></tr><tr><td><code>/proc/</code></td><td>proc 是 process（进程）的缩写，表示虚拟的目录，它是系统内存的映射，存放的是内存中的信息、进程、服务信息以及内核信息等。</td></tr></tbody></table><h2 id="_2-4-linux-中的目录" tabindex="-1">2.4 Linux 中的目录 <a class="header-anchor" href="#_2-4-linux-中的目录" aria-label="Permalink to &quot;2.4 Linux 中的目录&quot;">​</a></h2><ul><li>可以通过如下的命令，查看 Linux 中根目录下的一级子目录：</li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tree</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -L</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+o+`" alt="image-20240122042006229"></p><ul><li>其对应的解释如下：</li></ul><table><thead><tr><th>Linux 中的目录</th><th>备注</th></tr></thead><tbody><tr><td><code>/bin</code> -&gt; <code>/usr/bin/</code></td><td>bin 表示 binary ，即二进制文件命令，普通用户经常使用的命令，如：<code>ping</code> 命令。</td></tr><tr><td><code>/sbin</code>-&gt; <code>/usr/sbin/</code></td><td>s 是 super（超级）的缩写，即 root 用户才可以使用的命令，如：<code>shutdown</code> 命令和 <code>reboot</code> 命令。</td></tr><tr><td><code>/boot/</code></td><td>存放的是 Linux 系统启动和引导相关文件的目录，如：引导系统启动程序、系统内核镜像等。</td></tr><tr><td><code>/dev/</code></td><td>dev 是 device 的缩写，是设备文件目录，如：<code>/dev/cpu</code>、<code>/dev/mem</code> 等。</td></tr><tr><td><code>/etc/</code></td><td>系统服务<code>配置文件</code>的目录，存放系统、服务、命令的配置。</td></tr><tr><td><code>/home/</code></td><td>普通用户的家目录，如：<code>x</code> 用户的家目录就是 <code>/home/x/</code>。</td></tr><tr><td><code>/root/</code></td><td>root 用户的家目录，如：<code>root</code> 用户的家目录就是 <code>/root/</code>。</td></tr><tr><td><code>/lib</code> -&gt; <code>/usr/lib/</code></td><td>lib 是 library 的缩写，即库文件（服务软件的依赖），其作用类似于 Windows 里的 DLL 文件；其中 <code>.so</code> 是软件运行需要的环境。</td></tr><tr><td><code>/sbin</code> -&gt; <code>/usr/sbin/</code></td><td>作用和 lib 目录一样，只不过存放的是 64 位库文件（服务软件的依赖）。</td></tr><tr><td><code>/mnt/</code></td><td><code>mnt</code> 是 <code>mount tempoary</code> 的缩写，临时挂载点，临时的入口。</td></tr><tr><td><code>/opt/</code></td><td>opt 是 optional(可选) 的缩写，第三方软件的安装位置，如：MySQL 等。</td></tr><tr><td><code>/proc/</code></td><td>proc 是 process（进程）的缩写，表示虚拟的目录（不占硬盘空间），它是系统内存的映射，存放的是内存中的信息、进程、服务信息以及内核信息等。</td></tr><tr><td><code>/sys/</code></td><td>和 /proc 类似，表示虚拟的目录，它是系统内存的映射，存放的是内存中的信息、进程、服务信息以及内核信息等。</td></tr><tr><td><code>/tmp/</code></td><td>tmp 是 temp 的缩写，表示临时目录，用来存储程序运行中的临时文件等。</td></tr><tr><td><code>/usr/</code></td><td>usr 是 unix shared resources(共享资源) 的缩写，存放的是用户软件安装的位置，类似于 windows 下的 program files 目录。</td></tr><tr><td><code>/var/</code></td><td>var 是 variable 的缩写，用来存放经常变化的数据，经常用来保存应用程序的日志。</td></tr></tbody></table><h2 id="_2-5-路径表现形式" tabindex="-1">2.5 路径表现形式（⭐） <a class="header-anchor" href="#_2-5-路径表现形式" aria-label="Permalink to &quot;2.5 路径表现形式（:star:）&quot;">​</a></h2><ul><li>Linux 下的路径表示形式有如下的两种：</li></ul><table><thead><tr><th>Linux 路径表现形式</th><th>说明</th><th>建议</th></tr></thead><tbody><tr><td>绝对路径</td><td>从<code>根目录</code>开始的路径都是绝对路径，如：<code>/usr/local</code>、<code>/etc/hostname</code> 等。</td><td>初步学习阶段，推荐使用绝对路径。</td></tr><tr><td>相对路径</td><td>不是从根目录开始的路径就是相对路径，如：<code>etc/</code>、<code>etc/hostname</code>。</td><td>熟练以后，可以使用相对路径。</td></tr></tbody></table><blockquote><p>注意：路径中的 <code>.</code> 或 <code>./</code> 都是表示当前目录，而 <code>../</code> 表示的是上一层目录。</p></blockquote><ul><li><p><code>相对路径</code>和<code>绝对路径</code>的理解：</p><ul><li><p>我目前所在的位置在<code>中国江苏省南京市六合区钟秀嘉园xxx栋xxx室</code>，其中<code>中国江苏省南京市六合区钟秀嘉园xxx栋xxx室</code>就是绝对路径。</p></li><li><p>我目前所在的位置在<code>盛和家园</code>（<code>中国江苏省南京市六合区盛和家园xxx栋xxx室</code>）附近的<code>钟秀嘉园xxx栋xxx室</code>，其中<code>盛和家园附近的钟秀嘉园xxx栋xxx室</code>就是相对路径。</p></li></ul></li><li><p>示例：绝对路径</p></li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># /etc/NetworkManager/system-connections/eth0.nmconnection 就是绝对路径</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/NetworkManager/system-connections/eth0.nmconnection</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>示例：相对路径</li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/NetworkManager/system-connections/</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># eth0.nmconnection 就是相对路径</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eth0.nmconnection</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h1 id="第三章-linux-核心必会命令" tabindex="-1">第三章：Linux 核心必会命令 <a class="header-anchor" href="#第三章-linux-核心必会命令" aria-label="Permalink to &quot;第三章：Linux 核心必会命令&quot;">​</a></h1>`,41),r=[c];function p(h,u,b,m,g,x){return s(),t("div",null,r)}const _=e(l,[["render",p]]);export{v as __pageData,_ as default};
